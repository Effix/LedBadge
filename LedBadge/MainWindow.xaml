<Window x:Class="LedBadge.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:LedBadge"
        Title="Led Badge" Height="330" Width="476" UseLayoutRounding="True" WindowState="{Binding ViewWindowState}">
    <Window.Resources>
        
        <Style x:Key="EnableWhenConnected" TargetType="{x:Type FrameworkElement}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Connected}" Value="False">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="RadioButtonButton" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Border" Padding="1,1,1,1" BorderThickness="1">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0F0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#808080" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#A0A0C0" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>
    <DockPanel>
        <Image DockPanel.Dock="Top" Source="{Binding FrameBuffer}" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"/>
        <Grid Margin="0,2,0,0">
            <TabControl>
                <TabItem Header="Badge">
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Left" Width="150">
                            <GroupBox Header="Connection">
                                <StackPanel>
                                    <ComboBox ToolTip="Choose the serial communication port that the badge is connected to." Name="ComPortDropDown" ItemsSource="{Binding ComPorts}" SelectedValue="{Binding SelectedComPort}" DropDownOpened="ComPortsDropDownOpened"/>
                                    <Button Content="Connect" Click="ToggleConnection">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Style.Triggers>
                                                    <!--<Trigger SourceName="ComPortDropDown" Property="SeletedValue" Value="">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </Trigger>-->
                                                    <DataTrigger Binding="{Binding Connected}" Value="True">
                                                        <Setter Property="Content" Value="Disconnect"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Output">
                                <StackPanel>
                                    <DockPanel Margin="0,-1,0,0" ToolTip="Are the LEDs blinding you? Turn down the brightness a little.">
                                        <TextBlock DockPanel.Dock="Left" Text="Brightness" Margin="0,0,5,0"/>
                                        <Slider Minimum="0" Maximum="255" Value="{Binding Brightness}"/>
                                    </DockPanel>
                                    <CheckBox Margin="0,-1,0,0" ToolTip="Dithers the frame buffer before packing. The dots will crawl as the frame changes." Content="Dither Frame" IsChecked="{Binding DitherFrame}"/>
                                    <CheckBox Margin="0,-1,0,0" ToolTip="Dithers images before copying to the frame buffer. Done once at image load and stable as they scroll." Content="Dither Images" IsChecked="{Binding DitherImages}"/>
                                    <CheckBox Margin="0,-1,0,-1" ToolTip="Rotate image 180° if it is easier to have the cable com out of the other side when mounting." Content="Rotate Frame" IsChecked="{Binding RotateFrame}"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Left" Width="150">
                            <GroupBox Header="Query" DockPanel.Dock="Top">
                                <StackPanel>
                                    <Button Content="Ping" Click="SendPing" Style="{StaticResource EnableWhenConnected}"/>
                                    <Button Content="Version" Click="GetVersion" Style="{StaticResource EnableWhenConnected}"/>
                                    <Button Content="Poll Inputs" Click="PollInputs" Style="{StaticResource EnableWhenConnected}"/>
                                    <Button Content="Get Image" Click="GetImage" Style="{StaticResource EnableWhenConnected}"/>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Settings" DockPanel.Dock="Top" VerticalAlignment="Top">
                                <StackPanel>
                                    <Button Content="Set Startup Image" Click="SetBootImage" Style="{StaticResource EnableWhenConnected}"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <DockPanel>
                            <DockPanel ToolTip="Pick one of the sample sources or diagnostic modes to display." Margin="5,5,5,0" DockPanel.Dock="Top">
                                <TextBlock DockPanel.Dock="Left" Text="Display" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <ComboBox ItemsSource="{Binding Source={l:Enumeration {x:Type l:DisplayMode}}}" SelectedValue="{Binding DisplayMode}"/>
                            </DockPanel>
                            <GroupBox Header="Log">
                                <DockPanel>
                                    <Button Content="Clear" DockPanel.Dock="Bottom" Click="ClearLog"/>
                                    <ScrollViewer Name="LogScroller">
                                        <StackPanel Name="Log" />
                                    </ScrollViewer>
                                </DockPanel>
                            </GroupBox>
                        </DockPanel>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Text">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Bottom">
                            <Button Width="64" Content="Send" DockPanel.Dock="Right" Click="SendText"/>
                            <TextBlock DockPanel.Dock="Right" Text="Add one message per line above "/>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                                <RadioButton ToolTip="Single line layout" GroupName="Layout" Name="SingleLineLayout" Style="{StaticResource RadioButtonButton}">
                                    <RadioButton.Content>
                                        <Rectangle Width="40" Height="16" Stroke="Black" StrokeThickness="1" Fill="Transparent"/>
                                    </RadioButton.Content>
                                </RadioButton>
                                <RadioButton ToolTip="Double line layout" GroupName="Layout" Name="DoubleLineLayout" Style="{StaticResource RadioButtonButton}">
                                    <RadioButton.Content>
                                        <Grid Background="Transparent">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Rectangle Width="40" Height="7" Margin="0,0,0,2" Stroke="Black" StrokeThickness="1" Grid.Row="0"/>
                                            <Rectangle Width="40" Height="7" Stroke="Black" StrokeThickness="1" Grid.Row="1"/>
                                        </Grid>
                                    </RadioButton.Content>
                                </RadioButton>
                                <RadioButton ToolTip="Split layout" GroupName="Layout" Name="SplitLayout" Style="{StaticResource RadioButtonButton}">
                                    <RadioButton.Content>
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Rectangle Width="20" Height="16" Margin="0,0,2,0" Stroke="Black" StrokeThickness="1" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"/>
                                            <Rectangle Width="20" Height="7" Margin="0,0,0,2" Stroke="Black" StrokeThickness="1" Grid.Row="0" Grid.Column="1"/>
                                            <Rectangle Width="20" Height="7" Stroke="Black" StrokeThickness="1" Grid.Row="1" Grid.Column="1"/>
                                        </Grid>
                                    </RadioButton.Content>
                                </RadioButton>
                            </StackPanel>
                        </DockPanel>
                        <TextBox Name="TextInput" AcceptsReturn="True" Margin="0,0,0,5"/>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Image">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Bottom">
                            <Button Width="64" Content="Send" DockPanel.Dock="Right" Click="SendImage"/>
                            <TextBlock HorizontalAlignment="Right" Text="Add one image path per line above "/>
                        </DockPanel>
                        <TextBox Name="ImageInput" AcceptsReturn="True" Margin="0,0,0,5"/>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Twitter">
                    <DockPanel>
                        <Grid DockPanel.Dock="Top" Margin="5,5,0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Consumer Key"/>
                            <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding TwitterProvider.ConsumerKey}"/>
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="Consumer Secret"/>
                            <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding TwitterProvider.ConsumerSecret}"/>
                            <TextBlock Grid.Column="0" Grid.Row="2" Text="Access Token"/>
                            <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding TwitterProvider.AccessToken}"/>
                            <TextBlock Grid.Column="0" Grid.Row="3" Text="Access Token Secret"/>
                            <TextBox Grid.Column="2" Grid.Row="3" Text="{Binding TwitterProvider.AccessTokenSecret}"/>
                        </Grid>
                        <DockPanel DockPanel.Dock="Bottom">
                            <Button Name="TwitterButton" Width="64" Content="Start" DockPanel.Dock="Right" Click="ToggleTwitter"/>
                            <TextBox HorizontalAlignment="Right" Text="Add one search term per line above "/>
                        </DockPanel>
                        <TextBox Name="Hashtags" AcceptsReturn="True" Margin="0,0,0,5"/>
                    </DockPanel>
                </TabItem>
            </TabControl>
            <TextBlock Text="{Binding FrameRate, StringFormat=FPS: {0,5:0.00}}" FontFamily="Consolas" Margin="0,2,8,0" VerticalAlignment="Top" HorizontalAlignment="Right"/>
        </Grid>
    </DockPanel>
</Window>
    